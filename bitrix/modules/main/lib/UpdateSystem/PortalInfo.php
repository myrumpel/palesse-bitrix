<? namespace Bitrix\Main\UpdateSystem;$GLOBALS['____1360521760']= array(base64_decode(''.'Z'.'GVmaW'.'5lZA=='),base64_decode('Z'.'n'.'Vu'.'Y3Rp'.'b25fZXh'.'pc3Rz'),base64_decode('ZGVmaW'.'5lZA=='),base64_decode('cGhwdmVy'.'c'.'2'.'lvbg=='),base64_decode('Y2x'.'hc3NfZ'.'Xhpc3Rz'));if(!function_exists(__NAMESPACE__.'\\___52943578')){function ___52943578($_937697836){static $_393024103= false; if($_393024103 == false) $_393024103=array('TElDRU5TRV9LR'.'Vk=','bG'.'Fu'.'Zw==','dXRm','QlhfVVR'.'G','WQ==',''.'Tg==',''.'c3RhYm'.'xl','bW'.'Fpbg==','c3RhYmxlX3'.'ZlcnN'.'pb25zX29ubHk=','WQ'.'==',''.'Q0FOR1p'.'JUA='.'=','Z3pjb2'.'1wcmVzcw==',''.'WQ==','Tg'.'==','U1V'.'QR'.'F9EQlM=','WEU=','W'.'Q'.'='.'=','T'.'g='.'=',''.'U'.'1'.'VQRF9VU'.'lM=','Q0x'.'JRU5UX1NJ'.'V'.'EU'.'=',''.'U0VSVkVSX'.'05BT'.'UU=','c'.'3Bk','bWFp'.'bg==','Y3JjX2NvZG'.'U'.'=','','Z'.'GJ2','U'.'1VQR'.'F'.'9'.'WRVI'.'=','VV'.'B'.'EQVRF'.'X'.'1N'.'ZU'.'1RFTV9'.'WRV'.'JTSU9OX0E=','',''.'U'.'1'.'V'.'QR'.'F9T'.'UlM=','UlU=',''.'U1'.'VQRF9'.'DTVA=','Tg==','U1V'.'QRF9TVF'.'M=','UkE=','TEl'.'DR'.'U5TRV'.'9'.'TSUd'.'ORU'.'Q=','Q0xJRU5UX1BI'.'UFZF'.'Ug==',''.'T'.'kdJTlg'.'=','bWFpbg='.'=','dXBkYX'.'RlX3'.'VzZ'.'V9uZ2l'.'ueA==',''.'WQ==','U01E','bWF'.'pb'.'g==',''.'dXB'.'k'.'YXR'.'lX3Nh'.'ZmVfbW9kZQ==','Tg==',''.'VkV'.'SU0lPTg='.'=','V'.'FlQR'.'U5'.'D','Q0hIQg==','SFR'.'UU'.'F9I'.'T1NU','Q'.'1NBQg='.'=','U0VS'.'VkV'.'SX0F'.'ER'.'FI=','U1'.'V'.'JRA'.'==','QVB'.'Q'.'TElDQVRJT0'.'4=','','Y2x1'.'c3Rlc'.'g==','Q0NsdXN0ZX'.'I'.'=','PUFDVEl'.'WRQ==','WQ'.'==','L2J'.'p'.'d'.'HJ'.'p'.'eC9tb2'.'R1'.'bGVzL21ha'.'W4v'.'Y2xhc3Nlc'.'y9nZ'.'W5l'.'cmFs'.'L3'.'VwZGF0ZV9jbGl'.'lbnQucGhw','LQ'.'==',''.'bWFpbg'.'==','Tg==',''.'RA==',''.'RQ==','V'.'A'.'==','Rg'.'==','L2Jp'.'dHJpeC9tb2R1bG'.'VzL'.'21'.'ha'.'W4vY2'.'x'.'hc3Nlcy9nZ'.'W5l'.'cmFsL3VwZG'.'F0ZV'.'9j'.'bGll'.'bnQ'.'ucG'.'hw','','L'.'2JpdHJ'.'peC9t'.'b2R1bGVz'.'L21h'.'aW4v'.'Y2xhc3Nlc'.'y9nZ'.'W5lcmFsL3VwZGF'.'0ZV9jbG'.'l'.'lb'.'nQucG'.'hw','');return base64_decode($_393024103[$_937697836]);}}; use Bitrix\Main\Application; use Bitrix\Main\License; use Bitrix\Main\Loader; use Bitrix\Main\SystemException; use Bitrix\Main\SiteTable; class PortalInfo{ private License $_1541184874; public function __construct(){ $this->_1541184874= Application::getInstance()->getLicense();} public function common(): array{ global $DB; return[ ___52943578(0) => $this->_1541184874->getHashLicenseKey(), ___52943578(1) => LANGUAGE_ID, ___52943578(2) => $GLOBALS['____1360521760'][0](___52943578(3))? ___52943578(4): ___52943578(5), ___52943578(6) => \COption::GetOptionString(___52943578(7), ___52943578(8), ___52943578(9)), ___52943578(10) => $GLOBALS['____1360521760'][1](___52943578(11))? ___52943578(12): ___52943578(13), ___52943578(14) => $DB->type, ___52943578(15) =>(isset($DB->_1544421878) && $DB->_1544421878)? ___52943578(16): ___52943578(17), ___52943578(18) => $this->_1541184874->getActiveUsersCount(), ___52943578(19) => $_SERVER[___52943578(20)], ___52943578(21) => \COption::GetOptionString(___52943578(22), ___52943578(23), ___52943578(24)), ___52943578(25) => $this->__1844728024(), ___52943578(26) => $GLOBALS['____1360521760'][2](___52943578(27))? UPDATE_SYSTEM_VERSION_A: ___52943578(28), ___52943578(29) => $this->__708517437() ?? ___52943578(30), ___52943578(31) => ___52943578(32), ___52943578(33) => $this->__2021242130() ?? ___52943578(34), ___52943578(35) => $this->__481141898(), ___52943578(36) => $GLOBALS['____1360521760'][3](), ___52943578(37) => \COption::GetOptionString(___52943578(38), ___52943578(39), ___52943578(40)), ___52943578(41) => \COption::GetOptionString(___52943578(42), ___52943578(43), ___52943578(44)), ___52943578(45) => SM_VERSION, ___52943578(46) => $this->getLicenseType(), ___52943578(47) => $_SERVER[___52943578(48)], ___52943578(49) => $_SERVER[___52943578(50)], ___52943578(51) => $GLOBALS[___52943578(52)]->GetServerUniqID(),];} private function __1844728024(): string{ global $DB; $_1054971649= $DB->GetVersion(); return $_1054971649 !== false? $_1054971649: ___52943578(53);} private function __708517437():?int{ if(Loader::includeModule(___52943578(54)) && $GLOBALS['____1360521760'][4](___52943578(55))){ return \CCluster::getServersCount();} return null;} private function __2021242130():?int{ return SiteTable::getCount([___52943578(56) => ___52943578(57)]);} private function __481141898(): string{ require_once(Application::getDocumentRoot(). ___52943578(58)); $_149501541= \CUpdateClient::getNewLicenseSignedKey(); return $_149501541.___52943578(59).\COption::GetOptionString(___52943578(60), $_149501541, ___52943578(61));} public function getLicenseType(): string{ if($this->_1541184874->isDemo()){ return ___52943578(62);} elseif($this->_1541184874->isEncoded()){ return ___52943578(63);} elseif($this->_1541184874->isTimeBound()){ return ___52943578(64);} else{ return ___52943578(65);}} public function getModules(): array{ require_once(Application::getDocumentRoot(). ___52943578(66)); $_1171340415= ___52943578(67); $_511922945= \CUpdateClient::GetCurrentModules($_1171340415); $_499060015=(\CUpdateExpertMode::isEnabled() && \CUpdateExpertMode::isCorrectModulesStructure([])); if($_499060015){ $_511922945= \CUpdateExpertMode::processModulesFrom([], $_511922945);} if(!empty($_1171340415)){ throw new SystemException($_1171340415);} return $_511922945;} public function getLanguages(): array{ require_once(Application::getDocumentRoot(). ___52943578(68)); $_1171340415= ___52943578(69); $_575537005= \CUpdateClient::GetCurrentLanguages($_1171340415); if(!empty($_1171340415)){ throw new SystemException($_1171340415);} return $_575537005;}}?>